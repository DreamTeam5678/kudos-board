const { PrismaClient } = require('@prisma/client');
const prisma = new PrismaClient();

// Get all boards
exports.getBoards = async (req, res) => {
    try {
        const boards = await prisma.board.findMany({
            include: { cards: true },
        });
        res.json(boards);
    } catch (error) {
        console.error('Error fetching boards:', error);
        res.status(500).json({ error: 'Failed to fetch boards' });
    }
};


// Get a single board
exports.getBoardById = async (req, res) => {
    const { id } = req.params;
    try {
        const board = await prisma.board.findUnique({
            where: { id: parseInt(id) },
            include: { cards: true },
        });
        res.json(board);
    } catch (err) {
        console.error(err);
        res.status(500).json({ error: 'Board not found' });
    }
};  

// Create a new board
exports.createBoard = async (req, res) => {
    try {
        const newBoard = await prisma.board.create({
            data: {
                title: req.body.title,
                description: req.body.description,
                image: req.body.image,
                category: req.body.category,
            },
        });

        res.json(newBoard);
    } catch (error) {
        console.error('Error creating board:', error);
        res.status(500).json({ error: 'Failed to create board' });
    }
};

// Update a board
exports.updateBoard = async (req, res) => {
    const { id } = req.params;
    try {
        const updatedBoard = await prisma.board.update({
            where: { id: parseInt(id) },
            data: {
                title: req.body.title,
                description: req.body.description,
                image: req.body.image,
                category: req.body.category,
            },
        });
        res.json(updatedBoard);
    } catch (error) {
        console.error('Error updating board:', error);
        res.status(500).json({ error: 'Failed to update board' });
    }
};

// Delete a board
exports.deleteBoard = async (req, res) => {
    const { id } = req.params;
    try {
        const deletedBoard = await prisma.board.delete({
            where: { id: parseInt(id) },
        });
        res.json(deletedBoard);
    } catch (error) {
        console.error('Error deleting board:', error);
        res.status(500).json({ error: 'Failed to delete board' });
    }
};  

